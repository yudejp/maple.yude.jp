services:
  postgres:
    restart: always
    image: postgres:9-alpine
    shm_size: 256mb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mastodon"]
    volumes:
      - socks:/var/run
      - ./postgres:/var/lib/postgresql/data
      - ./backup:/backup
    environment:
      POSTGRES_USER: mastodon
      POSTGRES_DB: mastodon
      POSTGRES_PASSWORD: mastodon

#  pgweb:
#    restart: always
#    image: sosedoff/pgweb
#    ports:
#      - "8081:8081"
#    environment:
#      - PGWEB_DATABASE_URL=postgres://mastodon:mastodon@postgres?sslmode=disable
#    depends_on:
#      - postgres  # my database container is called postgres, not db

#  db16:
#    restart: always
#    image: postgres:16-alpine
#    shm_size: 256mb
#    healthcheck:
#      test: ["CMD", "pg_isready", "-U", "mastodon"]
#    volumes:
#      - socks:/var/run
#      - ./postgres_16:/var/lib/postgresql/data
#      - ./backup:/backup
#    environment:
#      POSTGRES_USER: mastodon
#      POSTGRES_DB: mastodon
#      POSTGRES_PASSWORD: mastodon

  redis:
    restart: always
    image: redis:6-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

  web:
    image: plusminusio/mastodon:4.2.10-plusminus.1
    container_name: mastodon_web
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    depends_on:
      - postgres
      - redis
    volumes:
      - ./public/system:/mastodon/public/system
    environment:
      POSTGRES_USER: mastodon
      POSTGRES_DB: mastodon
      POSTGRES_PASSWORD: mastodon_

  streaming:
    image: plusminusio/mastodon:4.2.10-plusminus.1
    container_name: mastodon_streaming
    restart: always
    env_file: .env.production
    command: node ./streaming
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    depends_on:
      - postgres
      - redis

  sidekiq:
    image: plusminusio/mastodon:4.2.10-plusminus.1
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq
    depends_on:
      - postgres
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  nginx:
    image: nginx:latest
    container_name: mastodon
    volumes:
      - ./nginx/mastodon.conf:/etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      - web

  cron-backup:
    restart: always
    build:
      context: ./backup
      dockerfile: Dockerfile
    volumes:
      - socks:/var/run
      - type: bind
        source: ./archives
        target: /app/archives
      - type: bind
        source: ./.env.production
        target: /app/.env.production
      - type: bind
        source: ./redis
        target: /app/redis

  cloudflared:
    image: cloudflare/cloudflared:latest
    user: root
    restart: always
    command: tunnel --no-autoupdate run --token $CLOUDFLARED_TOKEN

  auto-spam-executioner:
    image: ghcr.io/yude/auto-spam-executioner:master
    restart: always
    env_file: ./.env

volumes:
  socks:
