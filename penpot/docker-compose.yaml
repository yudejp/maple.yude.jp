volumes:
  penpot_postgres_v15:
  penpot_assets:
  # penpot_traefik:
  # penpot_minio:

services:
  penpot-frontend:
    image: "penpotapp/frontend:latest"
    restart: always
    user: root
    volumes:
      - ./data/assets:/opt/data/assets
    depends_on:
      - penpot-backend
      - penpot-exporter
    environment:
      - PENPOT_FLAGS=$PENPOT_FLAGS enable-login-with-ldap disable-registration
    extra_hosts:
      - "host.docker.internal:host-gateway"

  penpot-backend:
    image: "penpotapp/backend:latest"
    restart: always
    user: root
    volumes:
      - ./data/assets:/opt/data/assets
    depends_on:
      - penpot-postgres
      - penpot-redis
    env_file: ./penpot.env
    environment:
      - PENPOT_FLAGS=enable-login-with-ldap enable-smtp enable-prepl-server disable-registration
      - PENPOT_PUBLIC_URI=https://pot.soine.site
      - PENPOT_DATABASE_URI=postgresql://penpot-postgres/penpot
      - PENPOT_DATABASE_USERNAME=penpot
      - PENPOT_DATABASE_PASSWORD=penpot
      - PENPOT_REDIS_URI=redis://penpot-redis/0
      - PENPOT_ASSETS_STORAGE_BACKEND=assets-fs
      - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=/opt/data/assets
      - PENPOT_TELEMETRY_ENABLED=false
    extra_hosts:
      - "host.docker.internal:host-gateway"

  penpot-exporter:
    image: "penpotapp/exporter:latest"
    restart: always
    environment:
      - PENPOT_PUBLIC_URI=http://penpot-frontend
      - PENPOT_REDIS_URI=redis://penpot-redis/0
    extra_hosts:
      - "host.docker.internal:host-gateway"

  penpot-postgres:
    image: "postgres:15"
    restart: always
    stop_signal: SIGINT
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums
      - POSTGRES_DB=penpot
      - POSTGRES_USER=penpot
      - POSTGRES_PASSWORD=penpot
    extra_hosts:
      - "host.docker.internal:host-gateway"

  penpot-redis:
    image: redis:7
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cloudflared:
    image: cloudflare/cloudflared:latest
    user: root
    restart: always
    command: tunnel --no-autoupdate run --token $CLOUDFLARED_TOKEN
