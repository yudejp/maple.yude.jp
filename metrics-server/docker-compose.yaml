version: '3'
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: root
    restart: always
    volumes:
      - ./config/prometheus:/etc/prometheus
      - ./data/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"

  # node-exporter:
  #   image: quay.io/prometheus/node-exporter
  #   ports:
  #     - 9100:9100
  #   volumes:
  #     - ./proc:/host/proc
  #     - ./sys:/host/sys
  #     - ./rootfs:/rootfs

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    user: root
    volumes:
      - ./data/grafana:/var/lib/grafana
      - type: bind
        source: ./config/grafana/grafana.ini
        target: /etc/grafana/grafana.ini
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-image-renderer
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: https://grafana.yude.jp/
      GF_LOG_FILTERS: rendering:debug
    depends_on:
      - renderer

  renderer:
    image: grafana/grafana-image-renderer:latest
  
  switchbot-exporter:
    image: ghcr.io/yude/switchbot-exporter:master
    restart: unless-stopped
    ports:
      - 8882:8080
    env_file: .env
  
  cloudflared-grafana:
    image: cloudflare/cloudflared:latest
    user: root
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token $CLOUDFLARED_TOKEN_GRAFANA
    volumes:
      - '/root/.cloudflared:/root/.cloudflared'
  
  cloudflared-prometheus:
    image: cloudflare/cloudflared:latest
    user: root
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token $CLOUDFLARED_TOKEN_PROMETHEUS
    volumes:
      - '/root/.cloudflared:/root/.cloudflared'
